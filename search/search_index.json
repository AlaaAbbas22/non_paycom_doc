{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Payroll System For Non-Paycom students! This is the documentation for automation of the different sheets regarding Bill.com. It is designed to help you navigate, understand, pull information, make updates, or get started at the beginning of each year. The main sheet is here: Approval Sheet of 2023/2024 . To get started, you'll need the sheet from last year. Instead of building everything from scratch, we clone the sheet of the previous year, along with the automation scripts, and then update the necessary details. Important Sheets Important spreadsheets, their content, and why they are important: Approval Sheet: The main sheet where students submit hours and managers approve them. Reminders are sent automatically from the scripts of this sheet. Position Tracker: Contains all the information about students' positions, personal information, and managers' information. BDC Payment Summary: Details payments made to students through Bill.com . Bank Information Sheet: Where students submit their bank account information, which is used to set up their account on Bill.com. W8/9 Folder: A Google Drive folder in the Wire folder where W8/9 forms are collected. Ensure any forms submitted by students are saved in this folder. The Logic Important video to complement this documentation (Thanks, Alfonso!)","title":"Home"},{"location":"#welcome-to-the-payroll-system-for-non-paycom-students","text":"This is the documentation for automation of the different sheets regarding Bill.com. It is designed to help you navigate, understand, pull information, make updates, or get started at the beginning of each year. The main sheet is here: Approval Sheet of 2023/2024 . To get started, you'll need the sheet from last year. Instead of building everything from scratch, we clone the sheet of the previous year, along with the automation scripts, and then update the necessary details.","title":"Welcome to the Payroll System For Non-Paycom students!"},{"location":"#important-sheets","text":"Important spreadsheets, their content, and why they are important: Approval Sheet: The main sheet where students submit hours and managers approve them. Reminders are sent automatically from the scripts of this sheet. Position Tracker: Contains all the information about students' positions, personal information, and managers' information. BDC Payment Summary: Details payments made to students through Bill.com . Bank Information Sheet: Where students submit their bank account information, which is used to set up their account on Bill.com. W8/9 Folder: A Google Drive folder in the Wire folder where W8/9 forms are collected. Ensure any forms submitted by students are saved in this folder.","title":"Important Sheets"},{"location":"#the-logic","text":"Important video to complement this documentation (Thanks, Alfonso!)","title":"The Logic"},{"location":"about/","text":"About This Documentation Welcome to the student payroll documentation. This resource is an initiative from the student payroll team interns, led by Alaa Abbas, to ensure smooth operations and accurate record-keeping for non-Paycom students. The goal of this documentation is to provide clear instructions, insights, and support for navigating the payroll system, including automation scripts and important processes. We encourage you to keep this documentation up to date and to use it as a central point of reference for any payroll-related matters. If you encounter any issues, have questions, or need further assistance, please feel free to contact Alaa Abbas. Your feedback and contributions are vital in maintaining the quality and accuracy of this documentation. Thank you for using and supporting this initiative. We hope it helps you work more efficiently and effectively. Delivered with care by the student payroll team interns. - Alaa Abbas","title":"About"},{"location":"about/#about-this-documentation","text":"Welcome to the student payroll documentation. This resource is an initiative from the student payroll team interns, led by Alaa Abbas, to ensure smooth operations and accurate record-keeping for non-Paycom students. The goal of this documentation is to provide clear instructions, insights, and support for navigating the payroll system, including automation scripts and important processes. We encourage you to keep this documentation up to date and to use it as a central point of reference for any payroll-related matters. If you encounter any issues, have questions, or need further assistance, please feel free to contact Alaa Abbas. Your feedback and contributions are vital in maintaining the quality and accuracy of this documentation. Thank you for using and supporting this initiative. We hope it helps you work more efficiently and effectively. Delivered with care by the student payroll team interns. - Alaa Abbas","title":"About This Documentation"},{"location":"form_scripts/","text":"Quick Get Started Update the links and sheet IDs Introduction This section provides details about the code used for automating the Payroll Log Form . It will be very detailed, and while knowledge about JavaScript is helpful, it's not required. The explanations focus on handling the closure/opening of the Google Form and editing the questions. For scripts related to the Approval Sheet, check here . Accessing It You can find the code in the scripts of the form. This is what you would see: Code First 2 lines: These lines set up the name of the config sheet, which contains the dates and details about the current pay period. This is a sheet in the approval spreadsheet. updateForm function: This function retrieves the current pay period details (PP number, start date, end date, etc.) from the config sheet and updates the form. Sample Config Sheet: restrict function: This function closes the submission form on the Saturday after the submission deadline and reopens it on the Saturday of the next week. Triggers These triggers define the schedule on which the functions run. Navigate to the triggers section on the left and add triggers using the blue button on the bottom right. Trigger for restrict : This function runs every week, alternating between closing the form one week and reopening it the next. Trigger for updateForm : This function is intended to run every two weeks to update the form with each pay period. However, there is no biweekly trigger, and it does no harm to run it every week, so you can set it to run weekly like the restrict function.","title":"Form Scripts"},{"location":"form_scripts/#quick-get-started","text":"Update the links and sheet IDs","title":"Quick Get Started"},{"location":"form_scripts/#introduction","text":"This section provides details about the code used for automating the Payroll Log Form . It will be very detailed, and while knowledge about JavaScript is helpful, it's not required. The explanations focus on handling the closure/opening of the Google Form and editing the questions. For scripts related to the Approval Sheet, check here .","title":"Introduction"},{"location":"form_scripts/#accessing-it","text":"You can find the code in the scripts of the form. This is what you would see:","title":"Accessing It"},{"location":"form_scripts/#code","text":"First 2 lines: These lines set up the name of the config sheet, which contains the dates and details about the current pay period. This is a sheet in the approval spreadsheet. updateForm function: This function retrieves the current pay period details (PP number, start date, end date, etc.) from the config sheet and updates the form. Sample Config Sheet: restrict function: This function closes the submission form on the Saturday after the submission deadline and reopens it on the Saturday of the next week.","title":"Code"},{"location":"form_scripts/#triggers","text":"These triggers define the schedule on which the functions run. Navigate to the triggers section on the left and add triggers using the blue button on the bottom right. Trigger for restrict : This function runs every week, alternating between closing the form one week and reopening it the next. Trigger for updateForm : This function is intended to run every two weeks to update the form with each pay period. However, there is no biweekly trigger, and it does no harm to run it every week, so you can set it to run weekly like the restrict function.","title":"Triggers"},{"location":"getting_started/","text":"A Quick Guide on How to Get Started! Have a look at the get started of the form scripts and sheet scripts for a correct set up for the automation, as well. Accessing the Sheets Accessing Scripts, Approval Sheet, and WS Payroll Log Form Approval Sheet of 2024/2025 This spreadsheet is the starting point. It serves as Paycom for students not on Paycom. It collects data for the students' hours, and managers also approve or remove hours from students. The script of the spreadsheet is the Google Apps Script associated with the Approval Sheet. You can find it by clicking on the Extensions tab in the spreadsheet and then selecting Apps Script . The script for the WS Payroll Log Form is in the editing page of the form. Click the three dots in the top-right corner, then select Script Editor . When functions mention they run every week, two weeks, etc., it indicates a time-based trigger set in the Google Apps Script editor. Quick Journey Summary of the Process Student Submissions By the end of the pay period, students submit the hours they worked through the WS Payroll Log Form . The responses are collected in a sheet within the Approval Sheet spreadsheet called Submissions_Source . This is not what gets processed. Another sheet called Submissions imports this data and associates a key with each entry at Column A and Column J . The key is structured as: \"[student email address] - [PP code]\", for example, \"alaa@uni.minerva.edu - PP1\". Before submission day (Thursday), an automatic reminder is sent to students to submit their hours. This reminder is managed by the contractorsSubmissionReminder function, which runs every two weeks. Managers' Approval This data is imported into the first sheet in the spreadsheet, typically named after the pay period it refers to (e.g., PP1 for submissions of PP1). After the submission day (Friday), the Google form is automatically locked using the restrict function. Managers receive an automated email on Sunday to approve or remove students' hours. This occurs in the same sheet, typically the first sheet. The function for sending manager reminders is managerApprovalReminder . Shifting Sheets Managers approve hours by changing the approval column for their interns to YES or NO. On Tuesday/Wednesday, the sheet for the previous pay period is locked, moved to the end, and a new sheet is created for the current pay period. This is handled by the copySheet function. For example, if managers approve PP1, that sheet is locked and sent to the end, then a new sheet is created for PP2. Students' Return On the following Saturday, the form for logging hours is unlocked, allowing students to submit hours for the new pay period. On Thursday, one day before the end of the pay period, a reminder is sent, and the cycle continues. Actions What to update when you arrive? Config Sheet: This sheet in the Approval Sheet is crucial. Ensure it is always up-to-date. Check the Position Tracker of the year or the Master DB for accuracy. PP Sheet: Ensure the students' names in the PP sheet (at the beginning of the spreadsheet) are correct, as they are not updated automatically. YTD Analysis: Verify that names and emails are accurate. Submissions_Source: Ensure this sheet, where hours are submitted, is connected to the correct source. It should pull the most accurate information. Triggers: Ensure the triggers on the Approval Sheet are correctly configured. These can be found in the scripts. Scripts: Have a look at the get started of the form scripts and sheet scripts for a correct set up for the automation, as well. Important Sheets Important spreadsheets, their content, and why they are important: Approval Sheet: The main sheet where students submit hours and managers approve them. Reminders are sent automatically from the scripts of this sheet. Position Tracker: Contains all the information about students' positions, personal information, and managers' information. BDC Payment Summary: Details payments made to students through Bill.com . Bank Information Sheet: Where students submit their bank account information, which is used to set up their account on Bill.com. W8/9 Folder: A Google Drive folder in the Wire folder where W8/9 forms are collected. Ensure any forms submitted by students are saved in this folder.","title":"Getting Started!"},{"location":"getting_started/#a-quick-guide-on-how-to-get-started","text":"Have a look at the get started of the form scripts and sheet scripts for a correct set up for the automation, as well.","title":"A Quick Guide on How to Get Started!"},{"location":"getting_started/#accessing-the-sheets","text":"Accessing Scripts, Approval Sheet, and WS Payroll Log Form Approval Sheet of 2024/2025 This spreadsheet is the starting point. It serves as Paycom for students not on Paycom. It collects data for the students' hours, and managers also approve or remove hours from students. The script of the spreadsheet is the Google Apps Script associated with the Approval Sheet. You can find it by clicking on the Extensions tab in the spreadsheet and then selecting Apps Script . The script for the WS Payroll Log Form is in the editing page of the form. Click the three dots in the top-right corner, then select Script Editor . When functions mention they run every week, two weeks, etc., it indicates a time-based trigger set in the Google Apps Script editor.","title":"Accessing the Sheets"},{"location":"getting_started/#quick-journey","text":"Summary of the Process","title":"Quick Journey"},{"location":"getting_started/#student-submissions","text":"By the end of the pay period, students submit the hours they worked through the WS Payroll Log Form . The responses are collected in a sheet within the Approval Sheet spreadsheet called Submissions_Source . This is not what gets processed. Another sheet called Submissions imports this data and associates a key with each entry at Column A and Column J . The key is structured as: \"[student email address] - [PP code]\", for example, \"alaa@uni.minerva.edu - PP1\". Before submission day (Thursday), an automatic reminder is sent to students to submit their hours. This reminder is managed by the contractorsSubmissionReminder function, which runs every two weeks.","title":"Student Submissions"},{"location":"getting_started/#managers-approval","text":"This data is imported into the first sheet in the spreadsheet, typically named after the pay period it refers to (e.g., PP1 for submissions of PP1). After the submission day (Friday), the Google form is automatically locked using the restrict function. Managers receive an automated email on Sunday to approve or remove students' hours. This occurs in the same sheet, typically the first sheet. The function for sending manager reminders is managerApprovalReminder .","title":"Managers' Approval"},{"location":"getting_started/#shifting-sheets","text":"Managers approve hours by changing the approval column for their interns to YES or NO. On Tuesday/Wednesday, the sheet for the previous pay period is locked, moved to the end, and a new sheet is created for the current pay period. This is handled by the copySheet function. For example, if managers approve PP1, that sheet is locked and sent to the end, then a new sheet is created for PP2.","title":"Shifting Sheets"},{"location":"getting_started/#students-return","text":"On the following Saturday, the form for logging hours is unlocked, allowing students to submit hours for the new pay period. On Thursday, one day before the end of the pay period, a reminder is sent, and the cycle continues.","title":"Students' Return"},{"location":"getting_started/#actions","text":"What to update when you arrive? Config Sheet: This sheet in the Approval Sheet is crucial. Ensure it is always up-to-date. Check the Position Tracker of the year or the Master DB for accuracy. PP Sheet: Ensure the students' names in the PP sheet (at the beginning of the spreadsheet) are correct, as they are not updated automatically. YTD Analysis: Verify that names and emails are accurate. Submissions_Source: Ensure this sheet, where hours are submitted, is connected to the correct source. It should pull the most accurate information. Triggers: Ensure the triggers on the Approval Sheet are correctly configured. These can be found in the scripts. Scripts: Have a look at the get started of the form scripts and sheet scripts for a correct set up for the automation, as well.","title":"Actions"},{"location":"getting_started/#important-sheets","text":"Important spreadsheets, their content, and why they are important: Approval Sheet: The main sheet where students submit hours and managers approve them. Reminders are sent automatically from the scripts of this sheet. Position Tracker: Contains all the information about students' positions, personal information, and managers' information. BDC Payment Summary: Details payments made to students through Bill.com . Bank Information Sheet: Where students submit their bank account information, which is used to set up their account on Bill.com. W8/9 Folder: A Google Drive folder in the Wire folder where W8/9 forms are collected. Ensure any forms submitted by students are saved in this folder.","title":"Important Sheets"},{"location":"sheet_scripts/","text":"Introduction Here will be the details of the code being used. It will be very detailed. Knowledge about JavaScript will be valuable though not necessary. This page has the code for the automation of the Approval Sheet . The explanations are related to Handling Students submissions, managers approval, and maintaing the sheet of pay periods. For the scripts related to the google form, go here Accessing It You can find the code in the scripts of the form. This is what you would see: Code Email Reminders Definition of variables: defining the doc ids that have the format for the reminders to be sent to the students and managers. You might not need to update these ids but make sure to update the links in the documents. Manager reminder doc Student reminder doc listOfCCedAdmins is a list of emails that will be cced in the reminder emails. onlyUnique : This is a helper function for filtering unique values. We use it to prevent sending multiple reminders to the same manager who has multiple interns in the sheet. getGoogleDocumentAsHTML : This is a helper function for getting the reminder content from the docs referenced above. sendBulkEmails : A helper function for sending emails to multiple students or managers. managerApprovalReminder : A helper function for sending emails to multiple students or managers. contractorsSubmissionReminder : A helper function for sending emails to multiple students or managers. Sheet Defining variables: The most important thing is to keep the position tracker url up to date. absoluteEditors : These are the editors who will have edit access to previous pay periods' sheets. Changes are reflected in the future and are not retrospective. getSheetName : Used to get the name of the sheet of the current pay period (the one just ending). getHardCopy : Copying the actual values as a hard copy instead of copying sheets with formulas. putHardCopy : Saving the copied sheet into a new sheet. sortByManagerName : Sorting the sheet of the pay period by the managers names. copySheet : This function runs every two weeks. It creates a copy of the pay period that ended and sends it to the end of the spreadsheet. It then creates the sheet of the current pay period. refillFormulas : This function makes sure the formulas are filled out accurately in the pay period sheet in case something happened in the previos pay period. lockPPSheet : As the name says. It looks the sheet of the pay period that ended so that no further edits happen. lockPPSheet : As the name says. It looks the sheet of the pay period that ended so that no further edits happen. Some helper functions (getSumFormula, getTasksFormula, getHoursFormula) : justificationValuesOnly : This function helps convert the cells of the tasks completed by students to be plain text instead of formulas. This helps make those readable to managers when approving hours. Triggers These triggers define the schedule on which the functions run. Navigate to the triggers section on the left and add triggers using the blue button on the bottom right. Trigger for copySheet : This function runs every week. However, the function is defined to perform every two triggers so that the updating and copying happens every two weeks corresponding to a pay period. Trigger for contractorsSubmissionReminder : This function runs every week and similar to the one above. It sends a reminder for students to submit hours. Trigger for managersApprovalReminder : This function runs every week and similar to the ones above. It sends a reminder for managers to approve hours. Trigger for justificationValuesOnly : This function runs slightly after copySheet function to make the tasks completed cells more readable.","title":"Sheet Scripts"},{"location":"sheet_scripts/#introduction","text":"Here will be the details of the code being used. It will be very detailed. Knowledge about JavaScript will be valuable though not necessary. This page has the code for the automation of the Approval Sheet . The explanations are related to Handling Students submissions, managers approval, and maintaing the sheet of pay periods. For the scripts related to the google form, go here","title":"Introduction"},{"location":"sheet_scripts/#accessing-it","text":"You can find the code in the scripts of the form. This is what you would see:","title":"Accessing It"},{"location":"sheet_scripts/#code","text":"","title":"Code"},{"location":"sheet_scripts/#email-reminders","text":"Definition of variables: defining the doc ids that have the format for the reminders to be sent to the students and managers. You might not need to update these ids but make sure to update the links in the documents. Manager reminder doc Student reminder doc listOfCCedAdmins is a list of emails that will be cced in the reminder emails. onlyUnique : This is a helper function for filtering unique values. We use it to prevent sending multiple reminders to the same manager who has multiple interns in the sheet. getGoogleDocumentAsHTML : This is a helper function for getting the reminder content from the docs referenced above. sendBulkEmails : A helper function for sending emails to multiple students or managers. managerApprovalReminder : A helper function for sending emails to multiple students or managers. contractorsSubmissionReminder : A helper function for sending emails to multiple students or managers.","title":"Email Reminders"},{"location":"sheet_scripts/#sheet","text":"Defining variables: The most important thing is to keep the position tracker url up to date. absoluteEditors : These are the editors who will have edit access to previous pay periods' sheets. Changes are reflected in the future and are not retrospective. getSheetName : Used to get the name of the sheet of the current pay period (the one just ending). getHardCopy : Copying the actual values as a hard copy instead of copying sheets with formulas. putHardCopy : Saving the copied sheet into a new sheet. sortByManagerName : Sorting the sheet of the pay period by the managers names. copySheet : This function runs every two weeks. It creates a copy of the pay period that ended and sends it to the end of the spreadsheet. It then creates the sheet of the current pay period. refillFormulas : This function makes sure the formulas are filled out accurately in the pay period sheet in case something happened in the previos pay period. lockPPSheet : As the name says. It looks the sheet of the pay period that ended so that no further edits happen. lockPPSheet : As the name says. It looks the sheet of the pay period that ended so that no further edits happen. Some helper functions (getSumFormula, getTasksFormula, getHoursFormula) : justificationValuesOnly : This function helps convert the cells of the tasks completed by students to be plain text instead of formulas. This helps make those readable to managers when approving hours.","title":"Sheet"},{"location":"sheet_scripts/#triggers","text":"These triggers define the schedule on which the functions run. Navigate to the triggers section on the left and add triggers using the blue button on the bottom right. Trigger for copySheet : This function runs every week. However, the function is defined to perform every two triggers so that the updating and copying happens every two weeks corresponding to a pay period. Trigger for contractorsSubmissionReminder : This function runs every week and similar to the one above. It sends a reminder for students to submit hours. Trigger for managersApprovalReminder : This function runs every week and similar to the ones above. It sends a reminder for managers to approve hours. Trigger for justificationValuesOnly : This function runs slightly after copySheet function to make the tasks completed cells more readable.","title":"Triggers"}]}